pipeline {
    agent any

    stages {
        stage('Clean Up Old Deployments') {
            steps {
                script {
                    def namespace = 'your-namespace'
                    def labelSelector = 'app=your-app-label'
                    // Fetch all deployments with the specified label
                    def deployments = sh(script: "kubectl get deployments -n ${namespace} -l ${labelSelector} -o jsonpath='{.items[*].metadata.name}'", returnStdout: true).trim()
                    def deploymentList = deployments.split(' ')

                    // Iterate through the deployments and delete the old ones
                    for (deployment in deploymentList) {
                        if (deployment != '') {
                            // Customize the condition to decide which deployments to delete
                            if (deployment.contains('old-criteria')) {
                                sh "kubectl delete deployment ${deployment} -n ${namespace}"
                            }
                        }
                    }
                }
            }
        }

        stage('Deploy New Version') {
            steps {
                // Your deployment steps here, e.g., running a helm chart or kubectl apply
                sh 'kubectl apply -f your-deployment-file.yaml'
            }
        }
    }
}
